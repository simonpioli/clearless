@mixin arrow($pos, $size, $bg-color) {
	width: 0;
	height: 0;
	border: $size solid transparent;
	_abbor_el( $pos, $bg-color );
}

@function arrowbox($pos, $size, $bg-color, $offset:50%) {

	$after-margin = $size * -1px;
	
	position: relative;
	background: $bg-color;
	
	&:after,
	&:before {
		_abpos($pos);
		border: solid transparent;
		content: " ";
		height: 0;
		width: 0;
		position: absolute;
		pointer-events: none;
	}

	&:after {
		border-color: transparent;
		_abbor_el($pos, $bg-color);
		border-width: $size;
		_abpos_el($pos, $size, $offset);
		_abmar_el($pos, $after-margin);
	}

}

@mixin arrowbox($pos, $size, $bg-color, $border-width, $border-color, $offset:50%) {

	$before-margin = ($size + round($border-width * 1.41421356)) * -1px;
	
	arrowbox($pos, $size, $bg-color, $offset);
	
	border: $border-width solid $border-color;
	
	&:before {
		border-color: transparent;
		_abbor_el($pos, $border-color);
		border-width: $before-margin * -1;
		_abpos_el($pos, $size, $offset);
		_abmar_el($pos, $before-margin);
	}

}

@function _abpos( $pos ){
	@if $pos == left {
		@return right: 100;
	}
	@if $pos == right {
		@return left: 100%;
	}
	@if $pos == up {
		@return bottom: 100%;
	}
	@if $pos == down {
		@return top: 100%;
	}
}



@function _abpos_el($pos, $size, $offset) {

	// Surely we don't need 12 lines of the same thing to acomplish 6 in an if statement.
	// I'm not sure it'll do any harm to pass offset and add it to size even if it isn't a pixel value... To test...

	@if $pos == left or $pos == right {
		@return top: $offset + $size;
	}
	@if $pos == up or $pos == down {
		@return left: $offset + $size;
	}

	/* In case we need to split the maths based on $offset value
	@if $offset == 0 {
		@if $pos == left or $pos == right {
			top: $size;
		}
		@if $pos == up or $pos == down {
			left: $size;
		}
	}
	@if $offset != 0 {
		@if $pos == left or $pos == right {
			top: $offset + $size;
		}
		@if $pos == up or $pos == down {
			left: $offset + $size;
		}
	}
	*/

}

@function _abbor_el($pos, $color) {
	@if $pos == left {
		@return border-right-color: $color;
	}
	@if $pos == right {
		@return border-left-color: $color;
	}
	@if $pos == up {
		@return border-bottom-color: $color;
	}
	@if $pos == down {
		@return border-top-color: $color;
	}
}

@function _abmar_el($pos, $margin) {
	@if $pos == left or $pos == right {
		@return margin-top: $margin;
	}
	@if $pos == up or $pos == down {
		@return margin-left: $margin;
	}
}

/* For reference

._abpos( @pos ) when ( @pos = left ) { right: 100%; }
._abpos( @pos ) when ( @pos = right ) { left: 100%; }
._abpos( @pos ) when ( @pos = up ) { bottom: 100%; }
._abpos( @pos ) when ( @pos = down ) { top: 100%; }

._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = left ) { top: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = right ) { top: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = up ) { left: @size; }
._abpos_el( @pos, @size, @offset ) when ( @offset = 0 ) and ( @pos = down ) { left: @size; }

._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = left ) { top: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = right ) { top: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = up ) { left: @offset; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and not ( ispixel(@offset) ) and ( @pos = down ) { left: @offset; }

._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = left ) { top: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = right ) { top: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = up ) { left: @offset + @size; }
._abpos_el( @pos, @size, @offset ) when not ( @offset = 0 ) and ( ispixel(@offset) ) and ( @pos = down ) { left: @offset + @size; }

._abbor_el( @pos, @color ) when ( @pos = left ) { border-right-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = right ) { border-left-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = up ) { border-bottom-color: @color; }
._abbor_el( @pos, @color ) when ( @pos = down ) { border-top-color: @color; }

._abmar_el( @pos, @margin ) when ( @pos = left ) { margin-top: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = right ) { margin-top: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = up ) { margin-left: @margin; }
._abmar_el( @pos, @margin ) when ( @pos = down ) { margin-left: @margin; }

*/