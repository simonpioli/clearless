// ==============================================
// Typography related mixins
// ==============================================

@mixin font-size-rems($px-size){
	$base-font: strip-units($base-font-size);
	$rem-size: $px-size / $base-font;
	font-size: #{$px-size}px; 
	font-size: #{$rem-size}rem;
}

@mixin font-size-ems($target-px-size, $context-px-size:$base-font-size) {
	font-size: ($target-px-size / $context-px-size) * 1em;
}

@mixin font-face( $family-name, $font-path, $font-weight:normal, $font-style:normal, $include-svg:false ) {
	@font-face {
	    font-family: $family-name;
	    src: url('#{font-path}.eot');
	    @if $include-svg {
	    	src: url('#{font-path}.eot?#iefix') format('embedded-opentype'),
	        	 url('#{font-path}.woff') format('woff'),
	        	 url('#{font-path}.ttf') format('truetype'),
				 url('#{font-path}.svg#@{family-name}') format('svg');
	    }
	    @if not $include-svg {
		    src: url('#{font-path}.eot?#iefix') format('embedded-opentype'),
		         url('#{font-path}.woff') format('woff'),
		         url('#{font-path}.ttf') format('truetype');
		}
	    font-weight: $font-weight;
	    font-style: $font-style;
	}
}

@mixin incr($font-size: 10px, $base: $base-font-size, $old-line-height: $base * 1.5) {
	font-size: 1em * $font-size / $base;
	line-height: 1em * $old-line-height / $font-size * 4 / 5;
	margin: 0 0 #{$old-line-height}px;
}

@mixin font-feature-settings($discretionary: true, $oldff: true){
	$ligs: "liga", "dlig";
	$oldff: "liga=1, dlig=1";

	@if $discretionary == false {
		$ligs: "liga";
		$oldff: "liga=1";
	}

	@if $oldff != false {
		-moz-font-feature-settings: $oldff;
	}
	
	@each $prefix in $prefixes {
		#{$prefix}-font-feature-settings: $setting;
	}

    font-feature-settings: $setting;
}